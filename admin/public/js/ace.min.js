if (!("ace" in window)) {
    window.ace = {};
}
jQuery(function(a) {
    window.ace.click_event = a.fn.tap ? "tap" : "click";
});
jQuery(function(a) {
    ace.handle_side_menu(jQuery);
    ace.enable_search_ahead(jQuery);
    ace.general_things(jQuery);
    ace.widget_boxes(jQuery);
    ace.widget_reload_handler(jQuery)
});
ace.handle_side_menu = function(a) {
    a("#menu-toggler").on(ace.click_event,
        function() {
            a("#sidebar").toggleClass("display");
            a(this).toggleClass("display");
            return false
        });
    var c = a("#sidebar").hasClass("menu-min");
    a("#sidebar-collapse").on(ace.click_event,
        function() {
            c = a("#sidebar").hasClass("menu-min");
            ace.settings.sidebar_collapsed(!c)
        });
    var b = navigator.userAgent.match(/OS (5|6|7)(_\d)+ like Mac OS X/i);
    a(".nav-list").on(ace.click_event,
        function(h) {
            var g = a(h.target).closest("a");
            if (!g || g.length == 0) {
                return
            }
            c = a("#sidebar").hasClass("menu-min");
            if (!g.hasClass("dropdown-toggle")) {
                if (c && ace.click_event == "tap" && g.get(0).parentNode.parentNode == this) {
                    var i = g.find(".menu-text").get(0);
                    if (h.target != i && !a.contains(i, h.target)) {
                        return false
                    }
                }
                if (b) {
                    document.location = g.attr("href");
                    return false
                }
                return
            }
            var f = g.next().get(0);
            if (!a(f).is(":visible")) {
                var d = a(f.parentNode).closest("ul");
                if (c && d.hasClass("nav-list")) {
                    return
                }
                d.find("> .open > .submenu").each(function() {
                    if (this != f && !a(this.parentNode).hasClass("active")) {
                        a(this).slideUp(200).parent().removeClass("open")
                    }
                })
            } else {}
            if (c && a(f.parentNode.parentNode).hasClass("nav-list")) {
                return false
            }
            a(f).slideToggle(200).parent().toggleClass("open");
            return false
        })
};
ace.general_things = function(a) {
    a('.ace-nav [class*="icon-animated-"]').closest("a").on("click",
        function() {
            var d = a(this).find('[class*="icon-animated-"]').eq(0);
            var c = d.attr("class").match(/icon\-animated\-([\d\w]+)/);
            d.removeClass(c[0]);
            a(this).off("click")
        });
    a(".nav-list .badge[title],.nav-list .label[title]").tooltip({
        placement: "right"
    });
    a("#ace-settings-btn").on(ace.click_event,
        function() {
            a(this).toggleClass("open");
            a("#ace-settings-box").toggleClass("open")
        });
    a("#ace-settings-navbar").on("click",
        function() {
            ace.settings.navbar_fixed(this.checked)
        }).each(function() {
        this.checked = ace.settings.is("navbar", "fixed")
    });
    a("#ace-settings-sidebar").on("click",
        function() {
            ace.settings.sidebar_fixed(this.checked)
        }).each(function() {
        this.checked = ace.settings.is("sidebar", "fixed")
    });
    a("#ace-settings-breadcrumbs").on("click",
        function() {
            ace.settings.breadcrumbs_fixed(this.checked)
        }).each(function() {
        this.checked = ace.settings.is("breadcrumbs", "fixed")
    });
    a("#ace-settings-add-container").on("click",
        function() {
            ace.settings.main_container_fixed(this.checked)
        }).each(function() {
        this.checked = ace.settings.is("main-container", "fixed")
    });
    a("#ace-settings-rtl").removeAttr("checked").on("click",
        function() {
            ace.switch_direction(jQuery)
        });
    a("#btn-scroll-up").on(ace.click_event,
        function() {
            var c = Math.min(400, Math.max(100, parseInt(a("html").scrollTop() / 3)));
            a("html,body").animate({
                    scrollTop: 0
                },
                c);
            return false
        });
    try {
        a("#skin-colorpicker").ace_colorpicker()
    } catch (b) {}
    a("#skin-colorpicker").on("change",
        function() {
            var d = a(this).find("option:selected").data("skin");
            var c = a(document.body);
            c.removeClass("skin-1 skin-2 skin-3");
            if (d != "default") {
                c.addClass(d)
            }
            if (d == "skin-1") {
                a(".ace-nav > li.grey").addClass("dark")
            } else {
                a(".ace-nav > li.grey").removeClass("dark")
            }
            if (d == "skin-2") {
                a(".ace-nav > li").addClass("no-border margin-1");
                a(".ace-nav > li:not(:last-child)").addClass("light-pink").find('> a > [class*="icon-"]').addClass("pink").end().eq(0).find(".badge").addClass("badge-warning")
            } else {
                a(".ace-nav > li").removeClass("no-border margin-1");
                a(".ace-nav > li:not(:last-child)").removeClass("light-pink").find('> a > [class*="icon-"]').removeClass("pink").end().eq(0).find(".badge").removeClass("badge-warning")
            }
            if (d == "skin-3") {
                a(".ace-nav > li.grey").addClass("red").find(".badge").addClass("badge-yellow")
            } else {
                a(".ace-nav > li.grey").removeClass("red").find(".badge").removeClass("badge-yellow")
            }
        })
};
ace.widget_boxes = function(a) {
    a(document).on("hide.bs.collapse show.bs.collapse",
        function(c) {
            var b = c.target.getAttribute("id");
            a('[href*="#' + b + '"]').find('[class*="icon-"]').each(function() {
                var e = a(this);
                var d;
                var f = null;
                var g = null;
                if ((f = e.attr("data-icon-show"))) {
                    g = e.attr("data-icon-hide")
                } else {
                    if (d = e.attr("class").match(/icon\-(.*)\-(up|down)/)) {
                        f = "icon-" + d[1] + "-down";
                        g = "icon-" + d[1] + "-up"
                    }
                }
                if (f) {
                    if (c.type == "show") {
                        e.removeClass(f).addClass(g)
                    } else {
                        e.removeClass(g).addClass(f)
                    }
                    return false
                }
            })
        });
    a(document).on("click.ace.widget", "[data-action]",
        function(o) {
            o.preventDefault();
            var n = a(this);
            var p = n.data("action");
            var b = n.closest(".widget-box");
            if (b.hasClass("ui-sortable-helper")) {
                return
            }
            if (p == "collapse") {
                var j = b.hasClass("collapsed") ? "show" : "hide";
                var f = j == "show" ? "shown" : "hidden";
                var c;
                b.trigger(c = a.Event(j + ".ace.widget"));
                if (c.isDefaultPrevented()) {
                    return
                }
                var g = b.find(".widget-body");
                var m = n.find("[class*=icon-]").eq(0);
                var h = m.attr("class").match(/icon\-(.*)\-(up|down)/);
                var d = "icon-" + h[1] + "-down";
                var i = "icon-" + h[1] + "-up";
                var l = g.find(".widget-body-inner");
                if (l.length == 0) {
                    g = g.wrapInner('<div class="widget-body-inner"></div>').find(":first-child").eq(0)
                } else {
                    g = l.eq(0)
                }
                var e = 300;
                var k = 200;
                if (j == "show") {
                    if (m) {
                        m.addClass(i).removeClass(d)
                    }
                    b.removeClass("collapsed");
                    g.slideUp(0,
                        function() {
                            g.slideDown(e,
                                function() {
                                    b.trigger(c = a.Event(f + ".ace.widget"))
                                })
                        })
                } else {
                    if (m) {
                        m.addClass(d).removeClass(i)
                    }
                    g.slideUp(k,
                        function() {
                            b.addClass("collapsed");
                            b.trigger(c = a.Event(f + ".ace.widget"))
                        })
                }
            } else {
                if (p == "close") {
                    var c;
                    b.trigger(c = a.Event("close.ace.widget"));
                    if (c.isDefaultPrevented()) {
                        return
                    }
                    var r = parseInt(n.data("close-speed")) || 300;
                    b.hide(r,
                        function() {
                            b.trigger(c = a.Event("closed.ace.widget"));
                            b.remove()
                        })
                } else {
                    if (p == "clone") {
                        var b_c = b.clone(true);
                        b.after(b_c);
                    } else if (p == "reload") {
                        var c;
                        b.trigger(c = a.Event("reload.ace.widget"));
                        if (c.isDefaultPrevented()) {
                            return
                        }
                        n.blur();
                        var q = false;
                        if (b.css("position") == "static") {
                            q = true;
                            b.addClass("position-relative")
                        }
                        b.append('<div class="widget-box-overlay"><i class="icon-spinner icon-spin icon-2x white"></i></div>');
                        b.one("reloaded.ace.widget",
                            function() {
                                b.find(".widget-box-overlay").remove();
                                if (q) {
                                    b.removeClass("position-relative")
                                }
                            })
                    } else {
                        if (p == "settings") {
                            var c = a.Event("settings.ace.widget");
                            b.trigger(c)
                        }
                    }
                }
            }
        })
};
ace.widget_reload_handler = function(a) {
    a(document).on("reload.ace.widget", ".widget-box",
        function(b) {
            var c = a(this);
            setTimeout(function() {
                    c.trigger("reloaded.ace.widget")
                },
                parseInt(Math.random() * 1000 + 1000))
        })
};
ace.enable_search_ahead = function(a) {
    ace.variable_US_STATES = ["Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Dakota", "North Carolina", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"];
    try {
        a("#nav-search-input").typeahead({
            source: ace.variable_US_STATES,
            updater: function(c) {
                a("#nav-search-input").focus();
                return c
            }
        })
    } catch (b) {}
};
ace.switch_direction = function(d) {
    var c = d(document.body);
    c.toggleClass("rtl").find(".dropdown-menu:not(.datepicker-dropdown,.colorpicker)").toggleClass("pull-right").end().find(".pull-right:not(.dropdown-menu,blockquote,.profile-skills .pull-right)").removeClass("pull-right").addClass("tmp-rtl-pull-right").end().find(".pull-left:not(.dropdown-submenu,.profile-skills .pull-left)").removeClass("pull-left").addClass("pull-right").end().find(".tmp-rtl-pull-right").removeClass("tmp-rtl-pull-right").addClass("pull-left").end().find(".chosen-container").toggleClass("chosen-rtl").end();

    function a(h, g) {
        c.find("." + h).removeClass(h).addClass("tmp-rtl-" + h).end().find("." + g).removeClass(g).addClass(h).end().find(".tmp-rtl-" + h).removeClass("tmp-rtl-" + h).addClass(g)
    }

    function b(h, g, i) {
        i.each(function() {
            var k = d(this);
            var j = k.css(g);
            k.css(g, k.css(h));
            k.css(h, j)
        })
    }
    a("align-left", "align-right");
    a("no-padding-left", "no-padding-right");
    a("arrowed", "arrowed-right");
    a("arrowed-in", "arrowed-in-right");
    a("messagebar-item-left", "messagebar-item-right");
    var e = d("#piechart-placeholder");
    if (e.size() > 0) {
        var f = d(document.body).hasClass("rtl") ? "nw" : "ne";
        e.data("draw").call(e.get(0), e, e.data("chart"), f)
    }
};
/**
 * 动态引入js或css文件
 * @author sinker
 * @param   n   String      文件路径
 * @param   t   String      文件类型 [ 'js' | 'css' ]
 * @param   s   function    加载成功回调事件
 * @param   f   function    加载失败回调事件
 * @since 2016-01-14
 */
ace.load_file = function(n, t, s, f) {
    if (t == "js") {
        //调用用jQuery的getScript方法获取js文件
        $.getScript(n)
            .done(function(data, status, jqxhr) {
                if (s) {
                    s();
                }
            })
            .fail(function(data, status, jqxhr) {
                if (f) {
                    f();
                }
            });
    } else if (t == "css") {
        //调用元素的新建元素方法获取css文件
        var fileref = document.createElement('link');
        fileref.setAttribute("rel", "stylesheet");
        fileref.setAttribute("type", "text/css");
        fileref.setAttribute("href", n);
        $(fileref).ready(function() {
            if (s) {
                s();
            }
        });
    }
    if (typeof fileref != "undefined") {
        //报错检测
        document.getElementsByTagName("head")[0].appendChild(fileref);
    }
};
/**
 * 调用图片上传的方法
 * @author sinker
 * @param id                String  要作上传图片的元素id
 * @param imgDomain         String  图片展示的接口
 * @param imgUploadDomain   String  图片上传的接口
 * @since 2016-01-15
 */
ace.pic_upload = function(id, imgDomain, imgUploadDomain) {
    var picDomain = imgDomain;
    var $picInput = $("#" + id);
    var picName = $picInput.attr("data-name");
    $picInput.uploadify({
        'swf': '../static/uploadify.swf',
        'uploader': imgUploadDomain,
        'formData': {},
        'buttonText': '选择上传图片',
        // 'height': 15,
        'width': 200,
        'fileTypeExts': '*.jpg; *.png; *jpeg',
        'fileTypeDesc': 'Image Files',
        'fileSizeLimit': '2MB',
        'uploadLimit': 9,
        'fileObjName': 'file_name',
        // 'queueID': 'fileQueue',
        'auto': true,
        'multi': true,
        'onUploadSuccess': function(file, data, response) {
            if (response == true) {
                var oData = JSON.parse(data);
                if (oData.code == "1") {
                    var $group = $("#" + id).parents(".form-group");
                    var picUrl = oData.url;
                    if ($group.next().attr("class") && $("#" + id).parents(".form-group").next().attr("class").indexOf("pic-wall") != -1) {
                        if ($group.next().children("div").length < 9) {
                            $group.next(".pic-wall").append("<div><a target='_blank' href='" + picDomain + picUrl + "'><img src='" + picDomain + picUrl + "' /><i class='icon-large icon-remove red'></i></a><input type='hidden' name='" + picName + "[]' value='" + picUrl + "' /></div>");
                            $(".pic-wall").off("click").on("click", "i.icon-remove", function(e) {
                                e.preventDefault();
                                var swfu = $("#" + id).data("uploadify");
                                var uploadLimit = swfu.settings.uploadLimit;
                                $('#' + id).uploadify('settings', 'uploadLimit', ++uploadLimit);
                                $(this).parents("div:first").remove();
                            });
                        } else {
                            alert("上传图片超过9张!");
                            return 0;
                        }
                    } else if ($("#" + id).parents(".widget-box").length > 0) {
                        var $this = $("#" + id);
                        if (!$this.parents(".widget-box").next().is(".pic-wall")) {
                            $this.parents(".widget-box").after("<div class='pic-wall'></div>");
                        }
                        if ($this.parents(".widget-box").next().children("div").length < 9) {
                            $this.parents(".widget-box").next().append("<div><a target='_blank' href='" + picDomain + picUrl + "'><img src='" + picDomain + picUrl + "' /><i class='icon-large icon-remove red'></i></a><input type='hidden' name='" + picName + "[]' value='" + picUrl + "' /></div>");

                            $this.parents(".widget-box").next().on("click", "i.icon-remove", function(e) {
                                console.log("?");
                                e.preventDefault();
                                var swfu = $("#" + id).data("uploadify");
                                var uploadLimit = swfu.settings.uploadLimit;
                                $('#' + id).uploadify('settings', 'uploadLimit', ++uploadLimit);
                                $(this).parents("div:first").remove();
                            });
                        } else {
                            alert("上传图片超过9张!");
                            return 0;
                        }
                    }
                }
            }
        },
        'onUploadFailed': function(file, data, response) {
            console.log("upload failed!!!");
        }
    });

    $(".pic-wall").off("click").on("click", "i.icon-remove", function(e) {
        e.preventDefault();
        $(this).parents("div:first").remove();
    });
};
/**
 * 调用文件上传的方法
 * @author sinker
 * @param id                String  要作上传文件的元素id
 * @param imgDomain         String  文件下载的接口
 * @param imgUploadDomain   String  文件上传的接口
 * @since 2016-01-18
 */
ace.file_upload = function(id, fileDomain, fileUploadDomain) {
    var $fileInput = $("#" + id);
    var fileName = $fileInput.attr("data-name");
    $fileInput.uploadify({
        'swf': '../static/uploadify.swf',
        'uploader': fileUploadDomain,
        'formData': {},
        'buttonText': '选择上传文件',
        'width': 200,
        'fileSizeLimit': '10MB',
        'uploadLimit': 1,
        'fileTypeExts': '*.pdf; *.doc; *.docx; *.xls; *.xlsx',
        'fileObjName': 'file_name',
        // 'queueID': 'fileQueue',
        'auto': true,
        'multi': true,
        'onUploadSuccess': function(file, data, response) {
            if (response == true) {
                var oData = JSON.parse(data);
                if (oData.code == "1") {
                    var swfu = $fileInput.data("uploadify");
                    var stats = swfu.getStats();
                    var fileUrl = oData.url;
                    var fileRealName = fileUrl.split("/")[4];
                    if ($("#" + id).parents(".form-group").next().attr("class").indexOf("file-wall") != -1) {
                        if ($("#" + id).parents(".form-group").next().children("div").length < 1) {
                            $("#" + id).parents(".form-group").next().append("<div><a target='_blank' href='" + fileDomain + fileUrl + "'><span>" + fileRealName + "</span><i class='icon-large icon-remove red'></i></a><input type='hidden' name='" + fileName + "' value='" + fileUrl + "' /></div>");
                            $("#" + id).parents(".form-group").next().on("click", "i.icon-remove", function(e) {
                                e.preventDefault();
                                var swfu = $fileInput.data("uploadify");
                                var uploadLimit = swfu.settings.uploadLimit;
                                $('#' + id).uploadify('settings', 'uploadLimit', ++uploadLimit);
                                $(this).parents("div:first").remove();
                            });
                        } else {
                            alert("上传文件不超过1个!");
                            return 0;
                        }
                    }
                }
            }
        },
        'onUploadFailed': function(file, data, response) {
            console.log("upload failed!!!");
        }
    });

    $(".file-wall").off("click").on("click", "i.icon-remove", function(e) {
        e.preventDefault();
        $(this).parents("div:first").remove();
    });

};
/**
 * 其他附件以及类型的上传方法
 * @author sinker
 * @since 2016-01-27
 */
ace.other_files_upload = function(id, fileDomain, fileUploadDomain) {
    var $fileInput = $("#" + id);
    var fileName = $fileInput.attr("data-name");
    $fileInput.uploadify({
        'swf': '../static/uploadify.swf',
        'uploader': fileUploadDomain,
        'formData': {},
        'buttonText': '选择上传文件',
        'width': 200,
        'fileSizeLimit': '20MB',
        'fileTypeExts': '*.pdf; *.doc; *.docx; *.xls; *.xlsx',
        'fileObjName': 'file_name',
        // 'queueID': 'fileQueue',
        'auto': true,
        'multi': true,
        'onUploadSuccess': function(file, data, response) {
            if (response == true) {
                var oData = JSON.parse(data);
                if (oData.code == "1") {
                    var swfu = $fileInput.data("uploadify");
                    var stats = swfu.getStats();
                    console.log(stats.successful_uploads);
                    var fileUrl = oData.url;
                    var fileRealName = fileUrl.split("/")[4];
                    var title = fileRealName;
                    if (fileRealName.length > 24) {
                        fileRealName = fileRealName.slice(0, 24) + "...";
                    }
                    $("#" + id).parents(".form-group").after("<div class='form-group'><div class='col-sm-offset-3 col-sm-3'><input type='text' name='file_type[]' class='form-control' placeholder='附件类型'></div><div class='col-sm-4 file-list-inline'><div class='file-wrap'><a target='_blank' href='" + fileDomain + fileUrl + "'><span title='" + title + "'>" + title + "</span></a><input type='hidden' name='" + fileName + "' value='" + fileUrl + "' /></div><div class='btn-wrap one-group-btn-wrap'><i class='icon-large icon-remove-sign grey' data-action='one-group-close'></i></div></div></div>");

                    $(".file-wall").off("click").on("click", "i.icon-remove", function(e) {
                        e.preventDefault();
                        var swfu = $fileInput.data("uploadify");
                        console.log(swfu);
                        var uploadLimit = swfu.settings.uploadLimit;
                        $('#' + id).uploadify('settings', 'uploadLimit', ++uploadLimit);
                        // var stats = swfu.getStats();
                        // console.log(stats.successful_uploads);
                        // if(stats.successful_uploads > 0) {
                        //     stats.successful_uploads--;
                        // }
                        // swfu.setStats(stats);
                        $(this).parents("div:first").remove();
                    })
                }
            }
        },
        'onUploadFailed': function(file, data, response) {
            console.log("upload failed!!!");
        }
    });
}
/**
 * 其他附件以及类型说明的复制方法
 * @author sinker
 * @since 2016-01-18
 */
ace.file_list_init = function(fileDomain, fileUploadDomain) {
    $(document).on("click", ".file-btn-wrap i", function() {
        var $this = $(this);
        var p = $this.data("action");
        if (p == "group-clone") {
            var input_id = $this.parents(".btn-wrap").prev().find(".uploadify").attr("id");
            var id = input_id.split("-")[0];
            var count = $("[id^='" + id + "']").length / 3 + 1;
            var new_input_id = id + "-" + count;
            var $fragment = $(document.createDocumentFragment());
            var $clone_node = $this.parents(".form-group").clone(false);
            //清空输入框中的内容
            $clone_node.find("input").val("")
                .end().find("select").val("0")
                .end().find("label.control-label").text("")
                .end().find(".file-btn-wrap i").removeClass("icon-plus-sign green").addClass("icon-remove-sign grey").data("action", "group-close")
            //修改上传输入,重新调用上传的方法
            .end().find(".file-wrap").append("<input type='file' id='" + new_input_id + "' data-name='other_attachment[]'>");
            $fragment.append($clone_node);
            $clone_node = $this.parents(".form-group").next().clone(true);
            $clone_node.empty()
            $fragment.append($clone_node);
            var $attach = $this.parents(".form-group").next();
            $attach.after($fragment);
            //绑定上传文件的方法
            window.ace.file_upload(new_input_id, fileDomain, fileUploadDomain)
        } else {
            if (p == "group-close") {
                $this.parents(".form-group").next().remove().end().remove();
            }
        }
    })
};
/**
 * 开放时间初始化的方法
 * @author sinker
 * @since 2016-01-19
 */
ace.opentime_init = function() {
    $(document).on("click", ".opentime-btn-wrap i", function() {
        var $this = $(this);
        if ($this.data("action") == "line-clone") {
            var $clone_node = $this.parents(".form-group").clone(false);
            var $attach = $this.parents(".form-group");
            $clone_node.find("input").each(function(i, val) {
                $(val).val("");
            })
                .end().find("select").val("0")
                .end().find("label").text("")
                .end().find(".icon-plus-sign").removeClass("icon-plus-sign green").addClass("icon-remove-sign grey").attr("data-action", "line-close");
            $attach.after($clone_node);

            $("[name='ot_id[]']").each(function(i, groupVal) {
                $(this).parents(".form-group").find("input").each(function(j, inputVal) {
                    var name = $(inputVal).attr("name").split("[");
                    $(inputVal).attr("name", name[0] + "[" + i + "]");
                })
                $(this).parents(".form-group").find("select").each(function(j, inputVal) {
                    var name = $(inputVal).attr("name").split("[");
                    $(inputVal).attr("name", name[0] + "[" + i + "]");
                })
            })

            setTimeout(function() {
                $("[name^='ot_start_time']").each(function(i, val) {
                    $("[name='ot_start_time[" + i + "]']").rules("add", {
                        timeRangeStart: true
                    });
                });

                $("[name^='ot_end_time']").each(function(i, val) {
                    $("[name='ot_end_time[" + i + "]']").rules("add", {
                        timeRangeEnd: true
                    });
                });

                // $("[name^='ot_start_week']").each(function(i, val) {
                //     $("[name='ot_start_week[" + i + "]']").rules("add", {
                //         required: true,
                //         min: 1,
                //         messages: {
                //             min: "选择星期"
                //         }
                //     });
                // });

                // $("[name^='ot_end_week']").each(function(i, val) {
                //     $("[name='ot_end_week[" + i + "]']").rules("add", {
                //         required: true,
                //         min: 1,
                //         messages: {
                //             min: "选择星期"
                //         }
                //     });
                // });

            }, 0);

            $("[name^='ot_start_date'], [name^='ot_end_date']").datepicker({
                maxViewMode: 'months',
                format: 'mm-dd'
            });
            $("[name^='ot_start_time'], [name^='ot_end_time']").timepicker({
                minuteStep: 1,
                showSeconds: false,
                showMeridian: false,
                appendWidgetTo: ':first',
            });

        } else if ($this.data("action") == "line-close") {
            $this.parents(".form-group").remove();
        }
    })
}
/**
 * 开放时间每次验证的方法的方法
 * @author sinker
 * @since 2016-01-19
 */
ace.opentime_validate_init = function() {

    jQuery.validator.addMethod("timeRangeEnd", function(value, element, params) {
        var time_start = $(element).parent().siblings().find("[name^='ot_start_time']").val().split(":");
        var time_end = $(element).val().split(":");
        var endtime_obj = new Date(1994, 9, 27, time_end[0], time_end[1]);
        var starttime_obj = new Date(1994, 9, 27, time_start[0], time_start[1]);
        if (starttime_obj >= endtime_obj) {
            // return false;
            return true;
        } else {
            return true;
        }
    }, "时间范围错误")

    jQuery.validator.addMethod("timeRangeStart", function(value, element, params) {
        var time_end = $(element).parent().siblings().find("[name^='ot_end_time']").val().split(":");
        var time_start = $(element).val().split(":");
        var endtime_obj = new Date(1994, 9, 27, time_end[0], time_end[1]);
        var starttime_obj = new Date(1994, 9, 27, time_start[0], time_start[1]);
        if (starttime_obj >= endtime_obj) {
            // return false;
            return true;
        } else {
            return true;
        }
    }, "时间范围错误")

    setTimeout(function() {
        $("[name^='ot_start_time']").rules("add", {
            timeRangeStart: true
        });

        $("[name^='ot_end_time']").rules("add", {
            timeRangeEnd: true
        });

        // $("[name^='ot_start_week']").rules("add", {
        //     required: true,
        //     min: 1,
        //     messages: {
        //         min: "选择星期"
        //     }
        // });

        // $("[name^='ot_end_week']").rules("add", {
        //     required: true,
        //     min: 1,
        //     messages: {
        //         min: "选择星期"
        //     }
        // });

    }, 0);
}
/**
 * 购买方式初始化的方法
 * @author sinker
 * @since 2016-01-19
 */
ace.purchase_way_init = function() {
    $("input[name='purchases[]']").click(function() {
        var value = $(this).val();
        switch (value) {
            case "1":
                {
                    if ($(this).is(":checked")) {
                        $("[name='reserve_website']").parents(".form-group").show();
                    } else {
                        $("[name='reserve_website']").parents(".form-group").hide();
                    }
                    break;
                }
            case "2":
                {
                    if ($(this).is(":checked")) {
                        $("[name='reserve_email']").parents(".form-group").show();
                    } else {
                        $("[name='reserve_email']").parents(".form-group").hide();
                    }
                    break;
                }
            case "3":
                {
                    if ($(this).is(":checked")) {
                        $("[name='reserve_tel']").parents(".form-group").show();
                    } else {
                        $("[name='reserve_tel']").parents(".form-group").hide();
                    }
                    break;
                }
            case "4":
                {
                    if ($(this).is(":checked")) {
                        $("[name='purchases_address']").parents(".form-group").show();
                    } else {
                        $("[name='purchases_address']").parents(".form-group").hide();
                    }
                    break;
                }
        }
    })
};
/**
 * widget基本功能初始化的方法
 * @author sinker
 * @since 2016-01-18
 */
ace.widget_list_init = function(picDomain, picUploadDomain) {
    $(document).on("click", "[data-action]", function(e) {
        var $this = $(this);
        var p = $this.data("action");
        if (p == "item-clone") {
            var $attach = $this.parents(".widget-main");
            var $clone_node = $this.parents(".widget-item").clone(false);
            $clone_node.find("input[type='text']").val("")
                .end().find("input[type='number']").val("")
                .end().find("input[type='hidden']").val("")
                .end().find("select").val("-1")
                .end().find(".widget-item-btn-wrap i").removeClass("icon-plus-sign", "green").addClass("icon-remove-sign grey").data("action", "item-close")
                .end().find()
            $attach.append($clone_node);
            ace.adjustInnerWidgetArray();
        } else {
            if (p == "item-close") {
                $this.parents(".widget-item").remove();
                ace.adjustInnerWidgetArray();
            } else {
                if (p == "box-clone") {
                    var $clone_node = $this.parents(".form-group").clone(true);
                    var $attach = $(".widget-box:last").parents(".form-group");
                    $clone_node.find("input[type='text']").val("")
                        .end().find("input[type='number']").val("")
                        .end().find("input[type='hidden']").val("")
                        .end().find("select").val("-1")
                        .end().find("label.control-label").text("")
                        .end().find(".pic-wall").empty()
                        .end().find(".widget-item").each(function(i, val) {
                            if (i > 0) {
                                $(val).remove();
                            }
                        });
                    $clone_node.find(".widget-box-btn-wrap i").removeClass("icon-plus-sign", "green").addClass("icon-remove-sign grey").data("action", "box-close");
                    if ($clone_node.find(".pic-btn-wrap").length > 0) {
                        var $btn_wrap = $clone_node.find(".pic-btn-wrap");
                        var id = $btn_wrap.find(".uploadify").attr("id").split("-")[0];
                        var count = $("[id^='" + id + "']").length / 3;
                        $btn_wrap.empty().append("<input id='" + id + "' type='file' data-name='" + id + "[" + count + "]'>");
                    }
                    $attach.after($clone_node);
                    ace.adjustInnerWidgetArray(picDomain, picUploadDomain);
                } else {
                    if (p == "box-close") {
                        $this.parents(".form-group").remove();
                        ace.adjustInnerWidgetArray(picDomain, picUploadDomain);
                    }
                }
            }
        }
    })

    //个人费用和团队费用的切换
    $(document).on("click", ".widget-header input[name^='pr_sub_type']", function(e) {
        var click_type = $(this).data("type");
        var selected_type = $(this).parents(".form-inline").find(".selected").next().data("type");
        console.log(click_type, selected_type);
        if (click_type != selected_type) {
            if (click_type == "team") {
                var $widget_main = $(this).parents(".widget-box").find(".widget-main");
                $widget_main.empty().append('<div class="widget-item"><input type="hidden" name="pr_sub_item_id[0][0]"><div class="widget-item-list"><div class="form-inline"><input type="text" name="pr_price[0][0]" class="input-small" placeholder="价钱"><input type="number" min="0" max="999" name="pr_min_headcount[0][0]" class="input-small" placeholder="最小人数限制"><input type="number" min="0" max="999" name="pr_max_headcount[0][0]" class="input-small" placeholder="最大人数限制"></div><div class="form-inline"><input type="text" name="pr_intro[0][0]" class="input-xxlarge" placeholder="价格说明"></div></div><div class="widget-item-btn-wrap btn-wrap"><i class="icon-large icon-plus-sign green" data-action="item-clone"></i></div></div>');
            } else {
                var $widget_main = $(this).parents(".widget-box").find(".widget-main");
                $widget_main.empty().append('<div class="widget-item"><input type="hidden" name="pr_sub_item_id[0][0]"><div class="widget-item-list"><div class="form-inline"><input type="text" name="pr_item_title[0][0]" class="input-small" placeholder="儿童/老人"><input type="text" name="pr_price[0][0]" class="input-small" placeholder="价钱"><select name="pr_min_age[0][0]" class="input-mini age"><option value="-1">岁数</option><option value="0">0</option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="6">6</option><option value="7">7</option><option value="8">8</option><option value="9">9</option><option value="10">10</option><option value="11">11</option><option value="12">12</option><option value="13">13</option><option value="14">14</option><option value="15">15</option><option value="16">16</option><option value="17">17</option><option value="18">18</option><option value="19">19</option><option value="20">20</option><option value="21">21</option><option value="22">22</option><option value="23">23</option><option value="24">24</option><option value="25">25</option><option value="26">26</option><option value="27">27</option><option value="28">28</option><option value="29">29</option><option value="30">30</option><option value="31">31</option><option value="32">32</option><option value="33">33</option><option value="34">34</option><option value="35">35</option><option value="36">36</option><option value="37">37</option><option value="38">38</option><option value="39">39</option><option value="40">40</option><option value="41">41</option><option value="42">42</option><option value="43">43</option><option value="44">44</option><option value="45">45</option><option value="46">46</option><option value="47">47</option><option value="48">48</option><option value="49">49</option><option value="50">50</option><option value="51">51</option><option value="52">52</option><option value="53">53</option><option value="54">54</option><option value="55">55</option><option value="56">56</option><option value="57">57</option><option value="58">58</option><option value="59">59</option><option value="60">60</option><option value="61">61</option><option value="62">62</option><option value="63">63</option><option value="64">64</option><option value="65">65</option><option value="66">66</option><option value="67">67</option><option value="68">68</option><option value="69">69</option><option value="70">70</option><option value="71">71</option><option value="72">72</option><option value="73">73</option><option value="74">74</option><option value="75">75</option><option value="76">76</option><option value="77">77</option><option value="78">78</option><option value="79">79</option><option value="80">80</option><option value="81">81</option><option value="82">82</option><option value="83">83</option><option value="84">84</option><option value="85">85</option><option value="86">86</option><option value="87">87</option><option value="88">88</option><option value="89">89</option><option value="90">90</option><option value="91">91</option><option value="92">92</option><option value="93">93</option><option value="94">94</option><option value="95">95</option><option value="96">96</option><option value="97">97</option><option value="98">98</option><option value="99">99</option><option value="100">100</option></select><label class="inline">至</label><select name="pr_max_age[0][0]" class="input-mini age"><option value="-1">岁数</option><option value="0">0</option><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="6">6</option><option value="7">7</option><option value="8">8</option><option value="9">9</option><option value="10">10</option><option value="11">11</option><option value="12">12</option><option value="13">13</option><option value="14">14</option><option value="15">15</option><option value="16">16</option><option value="17">17</option><option value="18">18</option><option value="19">19</option><option value="20">20</option><option value="21">21</option><option value="22">22</option><option value="23">23</option><option value="24">24</option><option value="25">25</option><option value="26">26</option><option value="27">27</option><option value="28">28</option><option value="29">29</option><option value="30">30</option><option value="31">31</option><option value="32">32</option><option value="33">33</option><option value="34">34</option><option value="35">35</option><option value="36">36</option><option value="37">37</option><option value="38">38</option><option value="39">39</option><option value="40">40</option><option value="41">41</option><option value="42">42</option><option value="43">43</option><option value="44">44</option><option value="45">45</option><option value="46">46</option><option value="47">47</option><option value="48">48</option><option value="49">49</option><option value="50">50</option><option value="51">51</option><option value="52">52</option><option value="53">53</option><option value="54">54</option><option value="55">55</option><option value="56">56</option><option value="57">57</option><option value="58">58</option><option value="59">59</option><option value="60">60</option><option value="61">61</option><option value="62">62</option><option value="63">63</option><option value="64">64</option><option value="65">65</option><option value="66">66</option><option value="67">67</option><option value="68">68</option><option value="69">69</option><option value="70">70</option><option value="71">71</option><option value="72">72</option><option value="73">73</option><option value="74">74</option><option value="75">75</option><option value="76">76</option><option value="77">77</option><option value="78">78</option><option value="79">79</option><option value="80">80</option><option value="81">81</option><option value="82">82</option><option value="83">83</option><option value="84">84</option><option value="85">85</option><option value="86">86</option><option value="87">87</option><option value="88">88</option><option value="89">89</option><option value="90">90</option><option value="91">91</option><option value="92">92</option><option value="93">93</option><option value="94">94</option><option value="95">95</option><option value="96">96</option><option value="97">97</option><option value="98">98</option><option value="99">99</option><option value="100">100</option></select></div><div class="form-inline"><input type="text" name="pr_intro[0][0]" class="input-xxlarge" placeholder="价格说明"></div></div><div class="widget-item-btn-wrap btn-wrap"><i class="icon-large icon-plus-sign green" data-action="item-clone"></i></div></div>');
            }
            $(this).siblings("span.btn").addClass("btn-primary selected").parents(".inline").siblings().find("span.btn").removeClass("selected btn-primary");
            window.ace.adjustInnerWidgetArray();
        }
    })
};
/**
 * 此方法为修正widget内表单元素二维数组中第一维的定位
 * @author sinker
 * @since 2016-01-19
 */
ace.adjustInnerWidgetArray = function(picDomain, picUploadDomain) {
    var $widget_boxes = $(".widget-box");
    $widget_boxes.each(function(i, boxVal) {
        console.log("box: ", i);
        $(boxVal).find("input[name^='pr_sub_type']").each(function(x, typeVal) {
            var type_name = $(typeVal).attr("name").split("[");
            $(typeVal).attr("name", type_name[0] + "[" + i + "]");
            if ($(typeVal).prev().attr("class").indexOf("selected") != -1) {
                console.log(x + ":  checked!")
                $(typeVal).prop("checked", true);
            }
        })
        $(boxVal).find("input[name^='cb_ship_sub_title']").each(function(x, typeVal) {
            var type_name = $(typeVal).attr("name").split("[");
            $(typeVal).attr("name", type_name[0] + "[" + i + "]");
        })
        $(boxVal).find("input[name^='cb_ship_sub_type']").each(function(x, typeVal) {
            var type_name = $(typeVal).attr("name").split("[");
            $(typeVal).attr("name", type_name[0] + "[" + i + "]").attr("value", "team");
        })
        $(boxVal).find("input[name^='cb_ship_sub_id']").each(function(x, typeVal) {
            var type_name = $(typeVal).attr("name").split("[");
            $(typeVal).attr("name", type_name[0] + "[" + i + "]");
        })
        $(boxVal).find("input[id^='cb_ship_image']").each(function(x, typeVal) {
            console.log(x, typeVal);
            var type_name = $(typeVal).attr("id").split("-");
            console.log(type_name[0], i);
            $(typeVal).attr("name", type_name[0] + "[" + i + "]").attr("id", type_name[0] + "-" + i).attr("data-name", type_name[0] + "[" + i + "]");
            window.ace.pic_upload(type_name[0] + "-" + i, picDomain, picUploadDomain);
        })
        $(boxVal).find(".widget-item").each(function(j, itemVal) {
            $(itemVal).find("[name*='][']").each(function(k, elementVal) {
                var name = $(elementVal).attr("name").split("][");
                var name_without_digit = name[0].split("[");
                var adjusted_name = name_without_digit[0] + '[' + i + '][' + j + name[1].slice(-1);
                $(elementVal).attr("name", adjusted_name);
            })
            ace.widget_price_validate_add(i, j);
        })
    })
}
/**
 * widget中元素验证初始化
 * @author sinker
 * @since 2016-01-20
 */
ace.widget_price_validate_init = function() {

    jQuery.validator.addMethod("dateRangeMax", function(value, element, params) {
        var min_age = Number($(element).siblings("[name^='pr_min_age']").val());
        var max_age = Number($(element).val());
        if (min_age == -1 || max_age == -1) {
            return true;
        }
        if (min_age >= max_age) {
            return false;
        } else {
            return true;
        }
    }, "年龄出错")

    jQuery.validator.addMethod("dateRangeMin", function(value, element, params) {
        var max_age = Number($(element).siblings("[name^='pr_max_age']").val());
        var min_age = Number($(element).val());
        if (min_age == -1 || max_age == -1) {
            return true;
        }
        if (min_age >= max_age) {
            return false;
        } else {
            return true;
        }
    }, "年龄出错")

    if ($("[name^='pr_min_age]").length > 0) {
        setTimeout(function() {
            $("[name='pr_min_age[0][0]']").rules("add", {
                dateRangeMin: true
            });

            $("[name='pr_max_age[0][0]']").rules("add", {
                dateRangeMax: true
            });
        }, 0);
    }

    //判断多个年龄段的重叠
    /**
     * 判断多个时间段是否重叠的方法
     * @author sinker
     * @since 2016-01-20
     */
    function isAgeIntervalOverlay($this) {
        var $min_ages = $this.parents(".widget-main").find("[name^='pr_min_age']");
        var $max_ages = $this.parents(".widget-main").find("[name^='pr_max_age']");
        var age_intervals = new Array();
        $min_ages.each(function(i, val) {
            var interval = [Number($(val).val()), Number($max_ages.eq(i).val()), $max_ages.eq(i).attr("name")];
            age_intervals.push(interval);
        })

        //对于二维数组的快速排序
        function qSort(arr) {
            if (arr.length <= 1) {
                return arr;
            }
            var pivotIndex = Math.floor(arr.length / 2);
            var pivot_parent = arr.splice(pivotIndex, 1)[0];
            var pivot = pivot_parent[0];
            var left = [];
            var right = [];
            for (var i = 0; i < arr.length; i++) {
                if (arr[i][0] < pivot) {
                    left.push(arr[i]);
                } else {
                    right.push(arr[i]);
                }
            }

            return qSort(left).concat([pivot_parent], qSort(right));
        }

        age_intervals = qSort(age_intervals);

        var leng = age_intervals.length;

        if (leng > 1) {
            for (var i = 0; i < leng; i++) {
                if (i < leng - 1) {
                    if (age_intervals[i][1] >= age_intervals[i + 1][0]) {
                        return {
                            'isValidate': false,
                            'age_interval1': age_intervals[i][2],
                            'age_interval2': age_intervals[i + 1][2]
                        };
                    }
                }
            }
        }

        return {
            'isValidate': true
        }
    }

    $(document).on("change", "[name^='pr_min_age'], [name^='pr_max_age']", function() {
        if (isAgeIntervalOverlay($(this)).isValidate) {
            $(this).parents(".widget-body").find("label.error").remove()
        } else {
            var result = isAgeIntervalOverlay($(this));
            if (!$("[name='" + result.age_interval1 + "']").next().is(".error")) {
                $("[name='" + result.age_interval1 + "'], [name='" + result.age_interval2 + "']").after('<label id="pr_min_age[0][0]-error" class="error" for="pr_min_age[0][0]">区间重叠</label>');
            }
        }
    })

};
/**
 * widget中动态时操作,以增加验证的方法
 * @author sinker
 * @since 2016-01-20
 */
ace.widget_price_validate_add = function(i, k) {
    if ($("[name^='pr_min_age]").length > 0) {
        setTimeout(function() {
            $("[name='pr_min_age[" + i + "][" + k + "]']").rules("add", {
                dateRangeMin: true
            });

            $("[name='pr_max_age[" + i + "][" + k + "]']").rules("add", {
                dateRangeMax: true
            });
        }, 0);
    }
};
/**
 * 评星级功能的初始化方法
 * @author sinker
 * @since 2016-01-21
 */
ace.ranking_init = function() {
    //选择星级
    var current_star = 0; //已选定的星级
    var star_level = $(".star-level");
    star_level.hover(function() {
        var star_over = $(this).index();
        for (var i = 0; i <= 4; i++) {
            if (i <= star_over) {
                star_level.eq(i).children("span").removeClass("icon-star-empty");
                star_level.eq(i).children("span").addClass("icon-star");
            } else {
                star_level.eq(i).children("span").removeClass("icon-star");
                star_level.eq(i).children("span").addClass("icon-star-empty");
            }
        }
    }, function() {
        for (var i = 0; i <= 4; i++) { //已选定的星级填充显示，未选定的星级置为empty
            if (i < current_star) {
                star_level.eq(i).children("span").removeClass("icon-star-empty");
                star_level.eq(i).children("span").addClass("icon-star");
            } else {
                star_level.eq(i).children("span").removeClass("icon-star");
                star_level.eq(i).children("span").addClass("icon-star-empty");
            }
        }
    });
    star_level.bind("click", function() {
        if (current_star == $(this).index() + 1) {
            current_star = 0;
        } else {
            current_star = $(this).index() + 1;
        }
        $("#star_level_input").val(current_star); //填入星级
    })
};
/**
 * 单行复制的初始化方法
 * @author sinker
 * @since 2016-01-25
 */
ace.one_group_clone_init = function() {
    $(document).on("click", ".one-group-btn-wrap i", function() {
        var $this = $(this);
        var p = $this.data("action");
        if (p == "one-group-clone") {
            var $group = $this.parents(".form-group");
            var $fragment = $(document.createDocumentFragment());
            var name = $group.find("input").attr("name").split("[")[0];
            $group.addClass(name);
            var $clone_node = $this.parents(".form-group").clone(false);
            //清空输入框中的内容
            $clone_node.find("input:not([name^='menu_type'])").val("")
                .end().find("select").val("0")
                .end().find("label.control-label").text("")
                .end().find(".one-group-btn-wrap i").removeClass("icon-plus-sign green").addClass("icon-remove-sign grey").data("action", "one-group-close");
            if ($clone_node.find("[name='schedule_star[]']").length > 0) {
                $clone_node.find("[name='schedule_star[]']").timepicker({
                    minuteStep: 1,
                    showSeconds: false,
                    showMeridian: false,
                    appendWidgetTo: ':first'
                });
            }
            if ($clone_node.find("[name='schedule_end[]']").length > 0) {
                $clone_node.find("[name='schedule_end[]']").timepicker({
                    minuteStep: 1,
                    showSeconds: false,
                    showMeridian: false,
                    appendWidgetTo: ':first'
                });
            }
            $fragment.append($clone_node);
            var $attach = $("." + name + ":last");
            $attach.after($fragment);
        } else {
            if (p == "one-group-close") {
                $this.parents(".form-group").remove();
            }
        }
    });
}
/**
 * 验证素材重复的异步方法
 * @author sinker
 * @since 2016-02-01
 */
ace.is_repeat = function(url, pa, ia) {



    //获取参数数量
    var p_leng = pa.length;
    var i_leng = ia.length;
    var pre_arr = new Array();
    var inputs_arr = new Array();

    for (var i = 0; i < p_leng; i++) {
        pre_arr.push(pa[i]);
    }

    for (var i = 0; i < i_leng; i++) {
        inputs_arr.push(ia[i]);
    }

    $('[name="country_id"]').on("change", function() {
        setTimeout(function() {
            window.ace.repeat_validate(url, pre_arr, inputs_arr);
        }, 1000);
    });

    for (var i = 0; i < p_leng; i++) {
        var $this = $("[name='" + pa[i] + "']");
        $this.attr("data-valid", "true");
        $this.on("change", function() {
            window.ace.repeat_validate(url, pre_arr, inputs_arr);
        });
    }

    for (var i = 0; i < i_leng; i++) {
        var $this = $("[name='" + ia[i] + "']");
        $this.attr("data-valid", "true");
        $this.on("change", function() {
            window.ace.repeat_validate(url, pre_arr, inputs_arr);
        });
    }

};
ace.repeat_validate = function(url, pre_arr, inputs_arr) {

    var p_leng = pre_arr.length;
    var i_leng = inputs_arr.length;
    var asy_data = '{';

    for (var i = 0; i < i_leng; i++) {
        asy_data += '"' + inputs_arr[i] + '":"' + $('[name=' + inputs_arr[i] + ']').val() + '",';
    }
    for (var i = 0; i < p_leng; i++) {
        asy_data += '"' + pre_arr[i] + '":"' + $('[name=' + pre_arr[i] + ']').val() + '",';
    }
    if (asy_data != '{') {
        asy_data = asy_data.slice(0, asy_data.length - 1) + '}';
    } else {
        asy_data += '}';
    }

    //未填入内容时不做异步验证
    for (var i in pre_arr) {
        if ($("[name='" + pre_arr[i] + "']").val() == '0' || $("[name='" + pre_arr[i] + "']").val() == '') {
            return true;
        }
    }

    var flag;
    var repeat_xhr = $.ajax({
        url: url,
        type: 'POST',
        dataType: 'json',
        data: JSON.parse(asy_data),
        success: function(data) {
            if (data.code == 1) {
                flag = true;
            } else {
                flag = false;
            }
            var exists = data.exists;
            if (flag == false) {
                for (var i in inputs_arr) {
                    var $input = $("[name='" + inputs_arr[i] + "']");
                    $input.attr("data-action", "true");
                    $input.parent().find('label.sin-error').remove();
                }
                for (var i in exists) {
                    var $exist = $("[name='" + exists[i] + "']");
                    if ($exist.parent().find('.sin-error').length == 0) {
                        $exist.attr("data-action", "false");
                        $exist.parent().append('<label class="sin-error" for="name_en">该项内容重复!</label>');
                    }
                }
            } else {
                for (var i in inputs_arr) {
                    var $input = $("[name='" + inputs_arr[i] + "']");
                    $input.attr("data-action", "true");
                    $input.parent().find('label.sin-error').remove();
                }
            }
        }
    })

    for (var i = 0; i < i_leng; i++) {
        if ($('[name=' + inputs_arr[i] + ']').attr("data-action") == "false") {
            return false;
        }
    }

    return true;
}
